<snippet>
	<content><![CDATA[

const int LAST = ${1:1e7}; // value of the last prime
int factorOf[LAST+1];

const bool __primefactorsieve = []() {
	
	for (int i = 0; i <= LAST; ++i) {
		factorOf[i] = i;
	}
	
	for (long long i = 2; i*i <= LAST; ++i) {
		if (factorOf[i] == i) {
			for (long long j = i*i; j <= LAST; j += i) {
				if (factorOf[j] == j) {
					factorOf[j] = i;
				}
			}
		}
	}
	
	return 0;
}();

vector<long long> factorsOf(long long n) {
	
	if (n < 2) return {};
	
	vector<long long> ans;
	
	while (n > 1) {
		ans.push_back(factorOf[n]);
		n /= factorOf[n];
	}
	
	return ans;
}

]]></content>
	<tabTrigger>primefactorsieve</tabTrigger>
	<scope>source.c++</scope>
</snippet>
